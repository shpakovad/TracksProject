{"version":3,"sources":["Components/Track/Track.module.css","Components/Tracks/Tracks.module.css","Components/Filter/Filter.module.css","Components/Paginator/Paginator.module.css","Components/CountPerPage/CountPerPage.module.css","Components/Track/Track.js","Components/Tracks/Tracks.js","Components/Filter/Filter.js","Components/Paginator/Paginator.js","Components/CountPerPage/CountPerPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Track","className","style","trackBlock","singerBlock","this","props","singer","songBlock","song","genreBlock","genre","yearBlock","year","Component","Tracks","tracksElements","data","map","track","key","id","main","singers","onClick","onSort","songs","genres","years","Filter","removeDuplicates","array","reduce","arr","item","removed","filter","i","optionsSinger","value","optionsYear","optionsGenre","selected","filterValue","filtration","title","onChange","e","handleSelectChange","currentTarget","Pagination","pageNumbers","Math","ceil","totalData","dataPerPage","push","paginator","number","toString","paginate","href","CountPerPage","countPerPage","changeCountData","App","filteredProperty","setState","selectedValue","pageNumber","currentPage","newPerPage","sortType","state","indexOfLastData","indexOfFirstData","currentData","slice","sorted","sort","a","b","isReversed","localeCompare","length","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3b53484.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trackBlock\":\"Track_trackBlock__2Ad4a\",\"singerBlock\":\"Track_singerBlock__3ICjZ\",\"songBlock\":\"Track_songBlock__2HXU2\",\"genreBlock\":\"Track_genreBlock__j8StR\",\"yearBlock\":\"Track_yearBlock__2h_g5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Tracks_main__2IWIh\",\"singers\":\"Tracks_singers__34_kh\",\"songs\":\"Tracks_songs__3zDEB\",\"genres\":\"Tracks_genres__2DaYm\",\"years\":\"Tracks_years__2Y8ul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtration\":\"Filter_filtration__25vE8\",\"title\":\"Filter_title__3eMfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__tVxxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countPerPage\":\"CountPerPage_countPerPage__2lpAh\"};","import React, {Component} from 'react';\r\nimport style from './Track.module.css'\r\n\r\n\r\nclass Track extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={style.trackBlock}>\r\n\r\n                <div className={style.singerBlock}>{this.props.singer} </div>\r\n                <div className={style.songBlock}>    {this.props.song} </div>\r\n                <div className={style.genreBlock}>{this.props.genre} </div>\r\n                <div className={style.yearBlock}>{this.props.year} </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Track;\r\n","import React, {Component} from 'react';\r\nimport Track from \"../Track/Track\";\r\nimport style from './Tracks.module.css'\r\n\r\n\r\nclass Tracks extends Component {\r\n\r\n\r\n    render() {\r\n        let tracksElements = this.props.data.map((track) => {\r\n\r\n            return <Track key={track.id} singer={track.singer} song={track.song} genre={track.genre} year={track.year}/>\r\n        });\r\n        return (\r\n            <div>\r\n                <div className={style.main}>\r\n\r\n                    <div className={style.singers}><span> Singer </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('asc', 'singer')\r\n                        }}> ↑ </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('desc', 'singer')\r\n                        }}> ↓</span>\r\n                    </div>\r\n\r\n                    <div className={style.songs}><span>Song </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('asc', 'song')\r\n                        }}> ↑ </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('desc', 'song')\r\n                        }}> ↓</span>\r\n                    </div>\r\n\r\n                    <div className={style.genres}><span>Genre </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('asc', 'genre')\r\n                        }}> ↑ </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('desc', 'genre')\r\n                        }}> ↓</span>\r\n                    </div>\r\n\r\n                    <div className={style.years}><span>Year </span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('asc', 'year')\r\n                        }}>↑</span>\r\n                        <span onClick={() => {\r\n                            this.props.onSort('desc', 'year')\r\n                        }}>↓</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    {tracksElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, {Component} from 'react';\r\nimport style from './Filter.module.css'\r\n\r\n\r\nclass Filter extends Component {\r\n\r\n    render() {\r\n\r\n        let removeDuplicates = (array, key) => {\r\n            return array.reduce((arr, item) => {\r\n                const removed = arr.filter(i => i[key] !== item[key]);\r\n                return [...removed, item];\r\n            }, []);\r\n        };\r\n\r\n        let optionsSinger = removeDuplicates(this.props.data, 'singer').map((item) => {\r\n            return <option key={item.id} value={item.singer}>\r\n                {item.singer}\r\n            </option>\r\n        });\r\n\r\n        let optionsYear = removeDuplicates(this.props.data, 'year').map((item) => {\r\n            return <option key={item.id} value={item.year}>\r\n                {item.year}\r\n            </option>\r\n        });\r\n        let optionsGenre = removeDuplicates(this.props.data, 'genre').map((item) => {\r\n            return <option key={item.id} selected={this.props.filterValue === item.genre} >\r\n                {item.genre}\r\n            </option>\r\n        });\r\n        return (\r\n            <div className={style.filtration}>\r\n\r\n                <div className={style.title}> Singer:</div>\r\n                <select onChange={(e) => {\r\n                    this.props.handleSelectChange(e.currentTarget.value, \"singer\")\r\n                }}>\r\n                    <option onChange={(e) => {\r\n                        this.props.handleSelectChange(e.currentTarget.value, \"singer\")\r\n                    }}>All\r\n                    </option>\r\n                    {optionsSinger}\r\n                </select>\r\n\r\n                <div className={style.title}> Genre:</div>\r\n                <select onChange={(e) => {\r\n                    this.props.handleSelectChange(e.currentTarget.value, \"genre\")\r\n                }}>\r\n                    <option onChange={(e) => {\r\n                        this.props.handleSelectChange(e.currentTarget.value, \"genre\")\r\n                    }}>All\r\n                    </option>\r\n                    {optionsGenre}\r\n                </select>\r\n\r\n                <div className={style.title}> Year:</div>\r\n                <select onChange={(e) => {\r\n                    this.props.handleSelectChange(e.currentTarget.value, \"year\")\r\n                }}>\r\n                    <option onChange={(e) => {\r\n                        this.props.handleSelectChange(e.currentTarget.value, \"year\")\r\n                    }}>All\r\n                    </option>\r\n                    {optionsYear}\r\n                </select>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import React, {Component} from 'react';\r\nimport style from './Paginator.module.css'\r\n\r\n\r\nclass Pagination extends Component {\r\n\r\n    render() {\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.totalData / this.props.dataPerPage); i++) {\r\n            pageNumbers.push(i)\r\n        }\r\n        return (\r\n            <div className={style.paginator}>\r\n                {pageNumbers.map((number) => {\r\n                    return <a key={number.toString()}\r\n                              onClick={() => {\r\n                                  this.props.paginate(number)\r\n                              }}\r\n                              href='#'>\r\n                        {number}\r\n                    </a>\r\n\r\n                })\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {Component} from 'react';\r\nimport style from './CountPerPage.module.css'\r\n\r\n\r\nclass CountPerPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.countPerPage}>\r\n                <span>  <a href='#'  onClick={()=>{this.props.changeCountData(2)}}> 2 </a> </span>\r\n                <span>  <a href='#'  onClick={()=>{this.props.changeCountData(4)}}> 4 </a> </span>\r\n                <span>  <a href='#'  onClick={()=>{this.props.changeCountData(6)}}> 6 </a> </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountPerPage;\r\n","import React from 'react';\nimport './App.css';\nimport Tracks from \"./Components/Tracks/Tracks\";\nimport Filter from \"./Components/Filter/Filter\";\nimport data from './data'\nimport Pagination from \"./Components/Paginator/Paginator\";\nimport CountPerPage from \"./Components/CountPerPage/CountPerPage\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: data,\n            currentPage: 1,\n            dataPerPage: 4,\n            sortType: 'asc',\n            selectedValue: 'All',\n            key: '',\n            track: \"\",\n            filterValue: \"All\",\n        }\n    }\n\n    handleSelectChange = (value, filteredProperty) => {\n        this.setState({\n            selectedValue: filteredProperty,\n            track: value,\n            filterValue: value\n        })\n    };\n\n\n    paginate = (pageNumber) => {\n        this.setState({currentPage: pageNumber})\n    };\n\n    changeCountData = (newPerPage) => {\n        this.setState({dataPerPage:newPerPage})\n    };\n\n    onSort = (sortType, key) => {\n        this.setState({\n            sortType,\n            key\n        })\n    };\n\n\n    render() {\n        const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n        const currentData = this.state.data.slice(indexOfFirstData, indexOfLastData);\n\n        let sorted = currentData.sort((a, b) => {\n            let isReversed = (this.state.sortType === 'asc') ? 1 : -1;\n            switch (this.state.key) {\n                case 'year':\n                    return isReversed * a.year.localeCompare(b.year);\n                case 'genre':\n                    return isReversed * a.genre.localeCompare(b.genre);\n                case 'song':\n                    return isReversed * a.song.localeCompare(b.song);\n                case 'singer':\n                    return isReversed * a.singer.localeCompare(b.singer)\n            }\n        });\n\n        return (\n            <div className=\"App\">\n                <div className='wrapper'>\n                    <Tracks data={currentData.filter((item) => {\n                        if (this.state.track === 'All' || this.state.selectedValue === 'All') {\n                            return true\n                        } else if (this.state.selectedValue === 'genre') {\n                            return item.genre === this.state.track\n                        } else if (this.state.selectedValue === 'singer') {\n                            return item.singer === this.state.track\n                        } else if (this.state.selectedValue === 'year') {\n                            return item.year === this.state.track\n                        }\n                    })}\n                            onSort={this.onSort} sorted={sorted}/>\n                    <Filter\n                        data={currentData} selectedValue={this.state.selectedValue} filterValue={this.state.filterValue}\n                        handleSelectChange={this.handleSelectChange}/>\n                </div>\n                <Pagination dataPerPage={this.state.dataPerPage} data={currentData}\n                            totalData={this.state.data.length} paginate={this.paginate} />\n                <CountPerPage dataPerPage={this.state.dataPerPage} changeCountData={this.changeCountData}/>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}